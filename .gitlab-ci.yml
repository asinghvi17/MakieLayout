variables:
  CI_IMAGE_TAG: "opengl"
  MODERNGL_DEBUGGING: "true"
  JULIA_DEPOT_PATH: "$CI_PROJECT_DIR/.julia/"
  # CI_DEV_PKGS: "Makie#master AbstractPlotting#master GLMakie#master"

stages:
  - test
  - deploy


test:
  stage: test
  tags:
      - xorg
  image: "juliagpu/julia:v1.3-${CI_IMAGE_TAG}"
  before_script:
      - apt-get -qq update
      # glfw
      - apt-get install -y cmake xorg-dev mesa-utils p7zip-full

  script:
    - mkdir $JULIA_DEPOT_PATH # Pkg.jl#325
    - glxinfo | grep 'version'
    - julia -e 'using InteractiveUtils; versioninfo()'
    # - julia --project -e "using Pkg;
    #                       pkg\"add $CI_DEV_PKGS\""
    - julia --project -e 'using Pkg; pkg"test"'
  except:
    variables:
      - $CI_COMMIT_MESSAGE =~ /^DOCS.*/ # skip testing for pure docs builds
      - $CI_COMMIT_MESSAGE =~ /^bump version.*/ # skip testing for simple version bumps


documentation:
  stage: deploy
  tags:
      - xorg
  image: "juliagpu/julia:v1.3-${CI_IMAGE_TAG}"
  before_script:
      - apt-get -qq update
      # glfw
      - apt-get install -y cmake xorg-dev mesa-utils p7zip-full ssh

  script:
    - mkdir $JULIA_DEPOT_PATH # Pkg.jl#325
    - glxinfo | grep 'version'
    - git --version
    - ssh -V
    - julia -e 'using InteractiveUtils; versioninfo()'
    - julia --project=docs -e 'using Pkg; Pkg.instantiate(); Pkg.develop(PackageSpec(path=pwd()))'
    - julia --project=docs --color=yes docs/make.jl
    # - mv docs/build public # move to the directory picked up by Gitlab pages
  # artifacts:
  #   paths:
  #     - public
  only:
    - master
    - tags
